#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.2.1.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master

# Do not build on tags (GitHub only)
skip_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# operating system (build VM template)
os: Windows Server 2012

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# set up environment
environment:
  COVERALLS_REPO_TOKEN:
    secure: F5G6XI+z7nKUA1mmtD1Het6Yq5KltVlXKSTmKf2KrF+hDOyNp09V9Oozs3HuptWx

  COVERITY_SCAN_TOKEN:
    secure: mQfEUb+0o3c2fcz+FWC3ZtKhIhnkTUF0dsSB1Te5OsY=

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# install a few prereqs
install:
  - cinst opencover -source https://nuget.org/api/v2/
  - cinst coveralls.net -source https://nuget.org/api/v2/
  - cinst PublishCoverity -source https://nuget.org/api/v2/

# restore NuGet packages before building
before_build:
  - nuget restore

# build!
build_script:
  - ps: |
      cov-configure.exe --cs --compiler packages\Microsoft.Net.Compilers.1.0.0-rc2\build\..\tools\csc2.exe
  - ps: |
      cov-build.exe --dir cov-int "C:\Program Files (x86)\MSBuild\12.0\bin\msbuild.exe" NClap\NClap.csproj /m "/p:Configuration=$env:CONFIGURATION" "/p:Platform=AnyCPU" /p:NoPackages=1
  - ps: |
      & "C:\Program Files (x86)\MSBuild\12.0\bin\msbuild.exe" NClap.sln /m "/p:Configuration=$env:CONFIGURATION" "/p:Platform=$env:PLATFORM"
  - ps: |
      PublishCoverity.exe compress -o coverity.zip -i cov-int
  - ps: |
      PublishCoverity.exe publish -z coverity.zip -t $env:COVERITY_SCAN_TOKEN -d "AppVeyor scheduled build ($env:APPVEYOR_BUILD_VERSION)" --codeVersion "$env:APPVEYOR_BUILD_VERSION"

# enable RDP
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:
  - ps: OpenCover.Console.exe -register:user -target:"C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" -targetargs:"NClap.Tests\bin\$env:CONFIGURATION\NClap.Tests.dll /logger:Appveyor" -skipautoprops -filter:"+[NClap]*" -output:"coverage_$env:CONFIGURATION.xml"
  - ps: csmacnz.Coveralls.exe --opencover -i coverage_release.xml --repoToken $env:COVERALLS_REPO_TOKEN --commitId $env:APPVEYOR_REPO_COMMIT --commitBranch $env:APPVEYOR_REPO_BRANCH --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE --jobId $env:APPVEYOR_JOB_ID

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # publish coverage data
  - path: coverage_release.xml
    name: CodeCoverageData

  # publish NuGet packages
  - path: 'NClap\bin\$(Configuration)\*.nupkg' # find all NuGet packages recursively
    name: NuGetPackages
